# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  projectName = 'Cinema'
  simulators = ["iPhone 8", 'iPhone 11']

  desc "Swiftlint"
  lane :lint do |options|

    swiftlint(
      path: "./" + projectName + "/",
      executable: "Pods/SwiftLint/swiftlint",
      reporter: "html",
      output_file: "./reports/swiftlint.html",
      config_file: File.expand_path("../.swiftlint.yml")
    )

    swiftlint(
      path: "./" + projectName + "/",
      executable: "Pods/SwiftLint/swiftlint",
      output_file: "./reports/swiftlint.txt",
      config_file: File.expand_path("../.swiftlint.yml"),
      ignore_exit_status: true
    )
  end

  desc "Swiftlint and Autocorrect"
  lane :autocorrect do
    swiftlint(
      path: projectName + "/",
      config_file: "./../.swiftlint.yml",     
      mode: :autocorrect,                   
      ignore_exit_status: true,            
      quiet: false
    )
    swiftlint(
      path: projectName + "Tests/", 
      config_file: "./../.swiftlint.yml",     
      mode: :autocorrect,                   
      ignore_exit_status: true,            
      quiet: false
    )
    swiftlint(
      path: projectName + "UITests/", 
      config_file: "./../.swiftlint.yml",     
      mode: :autocorrect,                   
      ignore_exit_status: true,            
      quiet: false
    )
  end

  desc "Generate XCHTML Report"
  def generate_report(projectName)
    puts "Generating Test Report ..."
    sh "xchtmlreport -r test_output/#{projectName}.test_result"
  end

  desc "Build for Tests"
  lane :scanner do
    scan(
      workspace: "#{projectName}.xcworkspace",
      scheme: "#{projectName}",
      devices: simulators,
      result_bundle: "TestResults"
    )
    generate_report(projectName)
  end
end
